// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_acc3t_conv_acc3t,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=2089,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=0,HLS_SYN_FF=2750,HLS_SYN_LUT=2703,HLS_VERSION=2020_2}" *)

module conv_acc3t (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_In_ddr_AWVALID,
        m_axi_In_ddr_AWREADY,
        m_axi_In_ddr_AWADDR,
        m_axi_In_ddr_AWID,
        m_axi_In_ddr_AWLEN,
        m_axi_In_ddr_AWSIZE,
        m_axi_In_ddr_AWBURST,
        m_axi_In_ddr_AWLOCK,
        m_axi_In_ddr_AWCACHE,
        m_axi_In_ddr_AWPROT,
        m_axi_In_ddr_AWQOS,
        m_axi_In_ddr_AWREGION,
        m_axi_In_ddr_AWUSER,
        m_axi_In_ddr_WVALID,
        m_axi_In_ddr_WREADY,
        m_axi_In_ddr_WDATA,
        m_axi_In_ddr_WSTRB,
        m_axi_In_ddr_WLAST,
        m_axi_In_ddr_WID,
        m_axi_In_ddr_WUSER,
        m_axi_In_ddr_ARVALID,
        m_axi_In_ddr_ARREADY,
        m_axi_In_ddr_ARADDR,
        m_axi_In_ddr_ARID,
        m_axi_In_ddr_ARLEN,
        m_axi_In_ddr_ARSIZE,
        m_axi_In_ddr_ARBURST,
        m_axi_In_ddr_ARLOCK,
        m_axi_In_ddr_ARCACHE,
        m_axi_In_ddr_ARPROT,
        m_axi_In_ddr_ARQOS,
        m_axi_In_ddr_ARREGION,
        m_axi_In_ddr_ARUSER,
        m_axi_In_ddr_RVALID,
        m_axi_In_ddr_RREADY,
        m_axi_In_ddr_RDATA,
        m_axi_In_ddr_RLAST,
        m_axi_In_ddr_RID,
        m_axi_In_ddr_RUSER,
        m_axi_In_ddr_RRESP,
        m_axi_In_ddr_BVALID,
        m_axi_In_ddr_BREADY,
        m_axi_In_ddr_BRESP,
        m_axi_In_ddr_BID,
        m_axi_In_ddr_BUSER,
        m_axi_W_ddr_AWVALID,
        m_axi_W_ddr_AWREADY,
        m_axi_W_ddr_AWADDR,
        m_axi_W_ddr_AWID,
        m_axi_W_ddr_AWLEN,
        m_axi_W_ddr_AWSIZE,
        m_axi_W_ddr_AWBURST,
        m_axi_W_ddr_AWLOCK,
        m_axi_W_ddr_AWCACHE,
        m_axi_W_ddr_AWPROT,
        m_axi_W_ddr_AWQOS,
        m_axi_W_ddr_AWREGION,
        m_axi_W_ddr_AWUSER,
        m_axi_W_ddr_WVALID,
        m_axi_W_ddr_WREADY,
        m_axi_W_ddr_WDATA,
        m_axi_W_ddr_WSTRB,
        m_axi_W_ddr_WLAST,
        m_axi_W_ddr_WID,
        m_axi_W_ddr_WUSER,
        m_axi_W_ddr_ARVALID,
        m_axi_W_ddr_ARREADY,
        m_axi_W_ddr_ARADDR,
        m_axi_W_ddr_ARID,
        m_axi_W_ddr_ARLEN,
        m_axi_W_ddr_ARSIZE,
        m_axi_W_ddr_ARBURST,
        m_axi_W_ddr_ARLOCK,
        m_axi_W_ddr_ARCACHE,
        m_axi_W_ddr_ARPROT,
        m_axi_W_ddr_ARQOS,
        m_axi_W_ddr_ARREGION,
        m_axi_W_ddr_ARUSER,
        m_axi_W_ddr_RVALID,
        m_axi_W_ddr_RREADY,
        m_axi_W_ddr_RDATA,
        m_axi_W_ddr_RLAST,
        m_axi_W_ddr_RID,
        m_axi_W_ddr_RUSER,
        m_axi_W_ddr_RRESP,
        m_axi_W_ddr_BVALID,
        m_axi_W_ddr_BREADY,
        m_axi_W_ddr_BRESP,
        m_axi_W_ddr_BID,
        m_axi_W_ddr_BUSER,
        m_axi_Out_ddr_AWVALID,
        m_axi_Out_ddr_AWREADY,
        m_axi_Out_ddr_AWADDR,
        m_axi_Out_ddr_AWID,
        m_axi_Out_ddr_AWLEN,
        m_axi_Out_ddr_AWSIZE,
        m_axi_Out_ddr_AWBURST,
        m_axi_Out_ddr_AWLOCK,
        m_axi_Out_ddr_AWCACHE,
        m_axi_Out_ddr_AWPROT,
        m_axi_Out_ddr_AWQOS,
        m_axi_Out_ddr_AWREGION,
        m_axi_Out_ddr_AWUSER,
        m_axi_Out_ddr_WVALID,
        m_axi_Out_ddr_WREADY,
        m_axi_Out_ddr_WDATA,
        m_axi_Out_ddr_WSTRB,
        m_axi_Out_ddr_WLAST,
        m_axi_Out_ddr_WID,
        m_axi_Out_ddr_WUSER,
        m_axi_Out_ddr_ARVALID,
        m_axi_Out_ddr_ARREADY,
        m_axi_Out_ddr_ARADDR,
        m_axi_Out_ddr_ARID,
        m_axi_Out_ddr_ARLEN,
        m_axi_Out_ddr_ARSIZE,
        m_axi_Out_ddr_ARBURST,
        m_axi_Out_ddr_ARLOCK,
        m_axi_Out_ddr_ARCACHE,
        m_axi_Out_ddr_ARPROT,
        m_axi_Out_ddr_ARQOS,
        m_axi_Out_ddr_ARREGION,
        m_axi_Out_ddr_ARUSER,
        m_axi_Out_ddr_RVALID,
        m_axi_Out_ddr_RREADY,
        m_axi_Out_ddr_RDATA,
        m_axi_Out_ddr_RLAST,
        m_axi_Out_ddr_RID,
        m_axi_Out_ddr_RUSER,
        m_axi_Out_ddr_RRESP,
        m_axi_Out_ddr_BVALID,
        m_axi_Out_ddr_BREADY,
        m_axi_Out_ddr_BRESP,
        m_axi_Out_ddr_BID,
        m_axi_Out_ddr_BUSER
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_pp0_stage0 = 8'd4;
parameter    ap_ST_fsm_state6 = 8'd8;
parameter    ap_ST_fsm_state7 = 8'd16;
parameter    ap_ST_fsm_state8 = 8'd32;
parameter    ap_ST_fsm_state9 = 8'd64;
parameter    ap_ST_fsm_state10 = 8'd128;
parameter    C_M_AXI_IN_DDR_ID_WIDTH = 1;
parameter    C_M_AXI_IN_DDR_ADDR_WIDTH = 64;
parameter    C_M_AXI_IN_DDR_DATA_WIDTH = 32;
parameter    C_M_AXI_IN_DDR_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IN_DDR_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IN_DDR_WUSER_WIDTH = 1;
parameter    C_M_AXI_IN_DDR_RUSER_WIDTH = 1;
parameter    C_M_AXI_IN_DDR_BUSER_WIDTH = 1;
parameter    C_M_AXI_IN_DDR_TARGET_ADDR = 0;
parameter    C_M_AXI_IN_DDR_USER_VALUE = 0;
parameter    C_M_AXI_IN_DDR_PROT_VALUE = 0;
parameter    C_M_AXI_IN_DDR_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_W_DDR_ID_WIDTH = 1;
parameter    C_M_AXI_W_DDR_ADDR_WIDTH = 64;
parameter    C_M_AXI_W_DDR_DATA_WIDTH = 32;
parameter    C_M_AXI_W_DDR_AWUSER_WIDTH = 1;
parameter    C_M_AXI_W_DDR_ARUSER_WIDTH = 1;
parameter    C_M_AXI_W_DDR_WUSER_WIDTH = 1;
parameter    C_M_AXI_W_DDR_RUSER_WIDTH = 1;
parameter    C_M_AXI_W_DDR_BUSER_WIDTH = 1;
parameter    C_M_AXI_W_DDR_TARGET_ADDR = 0;
parameter    C_M_AXI_W_DDR_USER_VALUE = 0;
parameter    C_M_AXI_W_DDR_PROT_VALUE = 0;
parameter    C_M_AXI_W_DDR_CACHE_VALUE = 3;
parameter    C_M_AXI_OUT_DDR_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_DDR_ADDR_WIDTH = 64;
parameter    C_M_AXI_OUT_DDR_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT_DDR_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_DDR_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_DDR_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_DDR_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_DDR_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_DDR_TARGET_ADDR = 0;
parameter    C_M_AXI_OUT_DDR_USER_VALUE = 0;
parameter    C_M_AXI_OUT_DDR_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_DDR_CACHE_VALUE = 3;

parameter C_M_AXI_IN_DDR_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_W_DDR_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT_DDR_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_In_ddr_AWVALID;
input   m_axi_In_ddr_AWREADY;
output  [C_M_AXI_IN_DDR_ADDR_WIDTH - 1:0] m_axi_In_ddr_AWADDR;
output  [C_M_AXI_IN_DDR_ID_WIDTH - 1:0] m_axi_In_ddr_AWID;
output  [7:0] m_axi_In_ddr_AWLEN;
output  [2:0] m_axi_In_ddr_AWSIZE;
output  [1:0] m_axi_In_ddr_AWBURST;
output  [1:0] m_axi_In_ddr_AWLOCK;
output  [3:0] m_axi_In_ddr_AWCACHE;
output  [2:0] m_axi_In_ddr_AWPROT;
output  [3:0] m_axi_In_ddr_AWQOS;
output  [3:0] m_axi_In_ddr_AWREGION;
output  [C_M_AXI_IN_DDR_AWUSER_WIDTH - 1:0] m_axi_In_ddr_AWUSER;
output   m_axi_In_ddr_WVALID;
input   m_axi_In_ddr_WREADY;
output  [C_M_AXI_IN_DDR_DATA_WIDTH - 1:0] m_axi_In_ddr_WDATA;
output  [C_M_AXI_IN_DDR_WSTRB_WIDTH - 1:0] m_axi_In_ddr_WSTRB;
output   m_axi_In_ddr_WLAST;
output  [C_M_AXI_IN_DDR_ID_WIDTH - 1:0] m_axi_In_ddr_WID;
output  [C_M_AXI_IN_DDR_WUSER_WIDTH - 1:0] m_axi_In_ddr_WUSER;
output   m_axi_In_ddr_ARVALID;
input   m_axi_In_ddr_ARREADY;
output  [C_M_AXI_IN_DDR_ADDR_WIDTH - 1:0] m_axi_In_ddr_ARADDR;
output  [C_M_AXI_IN_DDR_ID_WIDTH - 1:0] m_axi_In_ddr_ARID;
output  [7:0] m_axi_In_ddr_ARLEN;
output  [2:0] m_axi_In_ddr_ARSIZE;
output  [1:0] m_axi_In_ddr_ARBURST;
output  [1:0] m_axi_In_ddr_ARLOCK;
output  [3:0] m_axi_In_ddr_ARCACHE;
output  [2:0] m_axi_In_ddr_ARPROT;
output  [3:0] m_axi_In_ddr_ARQOS;
output  [3:0] m_axi_In_ddr_ARREGION;
output  [C_M_AXI_IN_DDR_ARUSER_WIDTH - 1:0] m_axi_In_ddr_ARUSER;
input   m_axi_In_ddr_RVALID;
output   m_axi_In_ddr_RREADY;
input  [C_M_AXI_IN_DDR_DATA_WIDTH - 1:0] m_axi_In_ddr_RDATA;
input   m_axi_In_ddr_RLAST;
input  [C_M_AXI_IN_DDR_ID_WIDTH - 1:0] m_axi_In_ddr_RID;
input  [C_M_AXI_IN_DDR_RUSER_WIDTH - 1:0] m_axi_In_ddr_RUSER;
input  [1:0] m_axi_In_ddr_RRESP;
input   m_axi_In_ddr_BVALID;
output   m_axi_In_ddr_BREADY;
input  [1:0] m_axi_In_ddr_BRESP;
input  [C_M_AXI_IN_DDR_ID_WIDTH - 1:0] m_axi_In_ddr_BID;
input  [C_M_AXI_IN_DDR_BUSER_WIDTH - 1:0] m_axi_In_ddr_BUSER;
output   m_axi_W_ddr_AWVALID;
input   m_axi_W_ddr_AWREADY;
output  [C_M_AXI_W_DDR_ADDR_WIDTH - 1:0] m_axi_W_ddr_AWADDR;
output  [C_M_AXI_W_DDR_ID_WIDTH - 1:0] m_axi_W_ddr_AWID;
output  [7:0] m_axi_W_ddr_AWLEN;
output  [2:0] m_axi_W_ddr_AWSIZE;
output  [1:0] m_axi_W_ddr_AWBURST;
output  [1:0] m_axi_W_ddr_AWLOCK;
output  [3:0] m_axi_W_ddr_AWCACHE;
output  [2:0] m_axi_W_ddr_AWPROT;
output  [3:0] m_axi_W_ddr_AWQOS;
output  [3:0] m_axi_W_ddr_AWREGION;
output  [C_M_AXI_W_DDR_AWUSER_WIDTH - 1:0] m_axi_W_ddr_AWUSER;
output   m_axi_W_ddr_WVALID;
input   m_axi_W_ddr_WREADY;
output  [C_M_AXI_W_DDR_DATA_WIDTH - 1:0] m_axi_W_ddr_WDATA;
output  [C_M_AXI_W_DDR_WSTRB_WIDTH - 1:0] m_axi_W_ddr_WSTRB;
output   m_axi_W_ddr_WLAST;
output  [C_M_AXI_W_DDR_ID_WIDTH - 1:0] m_axi_W_ddr_WID;
output  [C_M_AXI_W_DDR_WUSER_WIDTH - 1:0] m_axi_W_ddr_WUSER;
output   m_axi_W_ddr_ARVALID;
input   m_axi_W_ddr_ARREADY;
output  [C_M_AXI_W_DDR_ADDR_WIDTH - 1:0] m_axi_W_ddr_ARADDR;
output  [C_M_AXI_W_DDR_ID_WIDTH - 1:0] m_axi_W_ddr_ARID;
output  [7:0] m_axi_W_ddr_ARLEN;
output  [2:0] m_axi_W_ddr_ARSIZE;
output  [1:0] m_axi_W_ddr_ARBURST;
output  [1:0] m_axi_W_ddr_ARLOCK;
output  [3:0] m_axi_W_ddr_ARCACHE;
output  [2:0] m_axi_W_ddr_ARPROT;
output  [3:0] m_axi_W_ddr_ARQOS;
output  [3:0] m_axi_W_ddr_ARREGION;
output  [C_M_AXI_W_DDR_ARUSER_WIDTH - 1:0] m_axi_W_ddr_ARUSER;
input   m_axi_W_ddr_RVALID;
output   m_axi_W_ddr_RREADY;
input  [C_M_AXI_W_DDR_DATA_WIDTH - 1:0] m_axi_W_ddr_RDATA;
input   m_axi_W_ddr_RLAST;
input  [C_M_AXI_W_DDR_ID_WIDTH - 1:0] m_axi_W_ddr_RID;
input  [C_M_AXI_W_DDR_RUSER_WIDTH - 1:0] m_axi_W_ddr_RUSER;
input  [1:0] m_axi_W_ddr_RRESP;
input   m_axi_W_ddr_BVALID;
output   m_axi_W_ddr_BREADY;
input  [1:0] m_axi_W_ddr_BRESP;
input  [C_M_AXI_W_DDR_ID_WIDTH - 1:0] m_axi_W_ddr_BID;
input  [C_M_AXI_W_DDR_BUSER_WIDTH - 1:0] m_axi_W_ddr_BUSER;
output   m_axi_Out_ddr_AWVALID;
input   m_axi_Out_ddr_AWREADY;
output  [C_M_AXI_OUT_DDR_ADDR_WIDTH - 1:0] m_axi_Out_ddr_AWADDR;
output  [C_M_AXI_OUT_DDR_ID_WIDTH - 1:0] m_axi_Out_ddr_AWID;
output  [7:0] m_axi_Out_ddr_AWLEN;
output  [2:0] m_axi_Out_ddr_AWSIZE;
output  [1:0] m_axi_Out_ddr_AWBURST;
output  [1:0] m_axi_Out_ddr_AWLOCK;
output  [3:0] m_axi_Out_ddr_AWCACHE;
output  [2:0] m_axi_Out_ddr_AWPROT;
output  [3:0] m_axi_Out_ddr_AWQOS;
output  [3:0] m_axi_Out_ddr_AWREGION;
output  [C_M_AXI_OUT_DDR_AWUSER_WIDTH - 1:0] m_axi_Out_ddr_AWUSER;
output   m_axi_Out_ddr_WVALID;
input   m_axi_Out_ddr_WREADY;
output  [C_M_AXI_OUT_DDR_DATA_WIDTH - 1:0] m_axi_Out_ddr_WDATA;
output  [C_M_AXI_OUT_DDR_WSTRB_WIDTH - 1:0] m_axi_Out_ddr_WSTRB;
output   m_axi_Out_ddr_WLAST;
output  [C_M_AXI_OUT_DDR_ID_WIDTH - 1:0] m_axi_Out_ddr_WID;
output  [C_M_AXI_OUT_DDR_WUSER_WIDTH - 1:0] m_axi_Out_ddr_WUSER;
output   m_axi_Out_ddr_ARVALID;
input   m_axi_Out_ddr_ARREADY;
output  [C_M_AXI_OUT_DDR_ADDR_WIDTH - 1:0] m_axi_Out_ddr_ARADDR;
output  [C_M_AXI_OUT_DDR_ID_WIDTH - 1:0] m_axi_Out_ddr_ARID;
output  [7:0] m_axi_Out_ddr_ARLEN;
output  [2:0] m_axi_Out_ddr_ARSIZE;
output  [1:0] m_axi_Out_ddr_ARBURST;
output  [1:0] m_axi_Out_ddr_ARLOCK;
output  [3:0] m_axi_Out_ddr_ARCACHE;
output  [2:0] m_axi_Out_ddr_ARPROT;
output  [3:0] m_axi_Out_ddr_ARQOS;
output  [3:0] m_axi_Out_ddr_ARREGION;
output  [C_M_AXI_OUT_DDR_ARUSER_WIDTH - 1:0] m_axi_Out_ddr_ARUSER;
input   m_axi_Out_ddr_RVALID;
output   m_axi_Out_ddr_RREADY;
input  [C_M_AXI_OUT_DDR_DATA_WIDTH - 1:0] m_axi_Out_ddr_RDATA;
input   m_axi_Out_ddr_RLAST;
input  [C_M_AXI_OUT_DDR_ID_WIDTH - 1:0] m_axi_Out_ddr_RID;
input  [C_M_AXI_OUT_DDR_RUSER_WIDTH - 1:0] m_axi_Out_ddr_RUSER;
input  [1:0] m_axi_Out_ddr_RRESP;
input   m_axi_Out_ddr_BVALID;
output   m_axi_Out_ddr_BREADY;
input  [1:0] m_axi_Out_ddr_BRESP;
input  [C_M_AXI_OUT_DDR_ID_WIDTH - 1:0] m_axi_Out_ddr_BID;
input  [C_M_AXI_OUT_DDR_BUSER_WIDTH - 1:0] m_axi_Out_ddr_BUSER;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    Out_ddr_blk_n_AW;
reg    Out_ddr_blk_n_W;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln75_reg_595;
reg   [0:0] icmp_ln75_reg_595_pp0_iter1_reg;
reg    Out_ddr_blk_n_B;
wire    ap_CS_fsm_state10;
wire    In_ddr_AWREADY;
wire    In_ddr_WREADY;
reg    In_ddr_ARVALID;
wire    In_ddr_ARREADY;
wire    In_ddr_RVALID;
reg    In_ddr_RREADY;
wire   [31:0] In_ddr_RDATA;
wire    In_ddr_RLAST;
wire   [0:0] In_ddr_RID;
wire   [0:0] In_ddr_RUSER;
wire   [1:0] In_ddr_RRESP;
wire    In_ddr_BVALID;
wire   [1:0] In_ddr_BRESP;
wire   [0:0] In_ddr_BID;
wire   [0:0] In_ddr_BUSER;
wire    W_ddr_AWREADY;
wire    W_ddr_WREADY;
reg    W_ddr_ARVALID;
wire    W_ddr_ARREADY;
wire    W_ddr_RVALID;
reg    W_ddr_RREADY;
wire   [31:0] W_ddr_RDATA;
wire    W_ddr_RLAST;
wire   [0:0] W_ddr_RID;
wire   [0:0] W_ddr_RUSER;
wire   [1:0] W_ddr_RRESP;
wire    W_ddr_BVALID;
wire   [1:0] W_ddr_BRESP;
wire   [0:0] W_ddr_BID;
wire   [0:0] W_ddr_BUSER;
reg    Out_ddr_AWVALID;
wire    Out_ddr_AWREADY;
reg    Out_ddr_WVALID;
wire    Out_ddr_WREADY;
wire   [31:0] Out_ddr_WDATA;
wire    Out_ddr_ARREADY;
wire    Out_ddr_RVALID;
wire   [31:0] Out_ddr_RDATA;
wire    Out_ddr_RLAST;
wire   [0:0] Out_ddr_RID;
wire   [0:0] Out_ddr_RUSER;
wire   [1:0] Out_ddr_RRESP;
wire    Out_ddr_BVALID;
reg    Out_ddr_BREADY;
wire   [1:0] Out_ddr_BRESP;
wire   [0:0] Out_ddr_BID;
wire   [0:0] Out_ddr_BUSER;
reg   [9:0] indvar_flatten33_reg_246;
reg   [3:0] L_ro_reg_257;
reg   [6:0] indvar_flatten_reg_268;
reg   [3:0] L_co_reg_279;
reg   [2:0] L_cho_reg_290;
wire   [9:0] add_ln75_1_fu_341_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln75_fu_383_p2;
wire   [3:0] select_ln75_1_fu_435_p3;
reg   [3:0] select_ln75_1_reg_599;
wire   [3:0] select_ln77_2_fu_541_p3;
wire   [1:0] trunc_ln81_fu_549_p1;
reg   [1:0] trunc_ln81_reg_629;
wire   [2:0] add_ln79_fu_553_p2;
wire   [6:0] select_ln77_3_fu_565_p3;
wire   [31:0] tmp_fu_573_p6;
reg   [31:0] tmp_reg_644;
wire    ap_CS_fsm_state2;
wire    grp_process_r_fu_301_ap_ready;
wire    grp_process_r_fu_301_ap_done;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire   [7:0] out_0_address0;
reg    out_0_ce0;
wire   [31:0] out_0_q0;
wire   [7:0] out_1_address0;
reg    out_1_ce0;
wire   [31:0] out_1_q0;
wire   [7:0] out_2_address0;
reg    out_2_ce0;
wire   [31:0] out_2_q0;
wire   [7:0] out_3_address0;
reg    out_3_ce0;
wire   [31:0] out_3_q0;
wire    grp_process_r_fu_301_ap_start;
wire    grp_process_r_fu_301_ap_idle;
wire    grp_process_r_fu_301_m_axi_In_ddr_AWVALID;
wire   [63:0] grp_process_r_fu_301_m_axi_In_ddr_AWADDR;
wire   [0:0] grp_process_r_fu_301_m_axi_In_ddr_AWID;
wire   [31:0] grp_process_r_fu_301_m_axi_In_ddr_AWLEN;
wire   [2:0] grp_process_r_fu_301_m_axi_In_ddr_AWSIZE;
wire   [1:0] grp_process_r_fu_301_m_axi_In_ddr_AWBURST;
wire   [1:0] grp_process_r_fu_301_m_axi_In_ddr_AWLOCK;
wire   [3:0] grp_process_r_fu_301_m_axi_In_ddr_AWCACHE;
wire   [2:0] grp_process_r_fu_301_m_axi_In_ddr_AWPROT;
wire   [3:0] grp_process_r_fu_301_m_axi_In_ddr_AWQOS;
wire   [3:0] grp_process_r_fu_301_m_axi_In_ddr_AWREGION;
wire   [0:0] grp_process_r_fu_301_m_axi_In_ddr_AWUSER;
wire    grp_process_r_fu_301_m_axi_In_ddr_WVALID;
wire   [31:0] grp_process_r_fu_301_m_axi_In_ddr_WDATA;
wire   [3:0] grp_process_r_fu_301_m_axi_In_ddr_WSTRB;
wire    grp_process_r_fu_301_m_axi_In_ddr_WLAST;
wire   [0:0] grp_process_r_fu_301_m_axi_In_ddr_WID;
wire   [0:0] grp_process_r_fu_301_m_axi_In_ddr_WUSER;
wire    grp_process_r_fu_301_m_axi_In_ddr_ARVALID;
wire   [63:0] grp_process_r_fu_301_m_axi_In_ddr_ARADDR;
wire   [0:0] grp_process_r_fu_301_m_axi_In_ddr_ARID;
wire   [31:0] grp_process_r_fu_301_m_axi_In_ddr_ARLEN;
wire   [2:0] grp_process_r_fu_301_m_axi_In_ddr_ARSIZE;
wire   [1:0] grp_process_r_fu_301_m_axi_In_ddr_ARBURST;
wire   [1:0] grp_process_r_fu_301_m_axi_In_ddr_ARLOCK;
wire   [3:0] grp_process_r_fu_301_m_axi_In_ddr_ARCACHE;
wire   [2:0] grp_process_r_fu_301_m_axi_In_ddr_ARPROT;
wire   [3:0] grp_process_r_fu_301_m_axi_In_ddr_ARQOS;
wire   [3:0] grp_process_r_fu_301_m_axi_In_ddr_ARREGION;
wire   [0:0] grp_process_r_fu_301_m_axi_In_ddr_ARUSER;
wire    grp_process_r_fu_301_m_axi_In_ddr_RREADY;
wire    grp_process_r_fu_301_m_axi_In_ddr_BREADY;
wire    grp_process_r_fu_301_m_axi_W_ddr_AWVALID;
wire   [63:0] grp_process_r_fu_301_m_axi_W_ddr_AWADDR;
wire   [0:0] grp_process_r_fu_301_m_axi_W_ddr_AWID;
wire   [31:0] grp_process_r_fu_301_m_axi_W_ddr_AWLEN;
wire   [2:0] grp_process_r_fu_301_m_axi_W_ddr_AWSIZE;
wire   [1:0] grp_process_r_fu_301_m_axi_W_ddr_AWBURST;
wire   [1:0] grp_process_r_fu_301_m_axi_W_ddr_AWLOCK;
wire   [3:0] grp_process_r_fu_301_m_axi_W_ddr_AWCACHE;
wire   [2:0] grp_process_r_fu_301_m_axi_W_ddr_AWPROT;
wire   [3:0] grp_process_r_fu_301_m_axi_W_ddr_AWQOS;
wire   [3:0] grp_process_r_fu_301_m_axi_W_ddr_AWREGION;
wire   [0:0] grp_process_r_fu_301_m_axi_W_ddr_AWUSER;
wire    grp_process_r_fu_301_m_axi_W_ddr_WVALID;
wire   [31:0] grp_process_r_fu_301_m_axi_W_ddr_WDATA;
wire   [3:0] grp_process_r_fu_301_m_axi_W_ddr_WSTRB;
wire    grp_process_r_fu_301_m_axi_W_ddr_WLAST;
wire   [0:0] grp_process_r_fu_301_m_axi_W_ddr_WID;
wire   [0:0] grp_process_r_fu_301_m_axi_W_ddr_WUSER;
wire    grp_process_r_fu_301_m_axi_W_ddr_ARVALID;
wire   [63:0] grp_process_r_fu_301_m_axi_W_ddr_ARADDR;
wire   [0:0] grp_process_r_fu_301_m_axi_W_ddr_ARID;
wire   [31:0] grp_process_r_fu_301_m_axi_W_ddr_ARLEN;
wire   [2:0] grp_process_r_fu_301_m_axi_W_ddr_ARSIZE;
wire   [1:0] grp_process_r_fu_301_m_axi_W_ddr_ARBURST;
wire   [1:0] grp_process_r_fu_301_m_axi_W_ddr_ARLOCK;
wire   [3:0] grp_process_r_fu_301_m_axi_W_ddr_ARCACHE;
wire   [2:0] grp_process_r_fu_301_m_axi_W_ddr_ARPROT;
wire   [3:0] grp_process_r_fu_301_m_axi_W_ddr_ARQOS;
wire   [3:0] grp_process_r_fu_301_m_axi_W_ddr_ARREGION;
wire   [0:0] grp_process_r_fu_301_m_axi_W_ddr_ARUSER;
wire    grp_process_r_fu_301_m_axi_W_ddr_RREADY;
wire    grp_process_r_fu_301_m_axi_W_ddr_BREADY;
wire   [3:0] grp_process_r_fu_301_w_0_address0;
wire    grp_process_r_fu_301_w_0_ce0;
wire    grp_process_r_fu_301_w_0_we0;
wire   [31:0] grp_process_r_fu_301_w_0_d0;
wire   [3:0] grp_process_r_fu_301_w_01_address0;
wire    grp_process_r_fu_301_w_01_ce0;
wire    grp_process_r_fu_301_w_01_we0;
wire   [31:0] grp_process_r_fu_301_w_01_d0;
wire   [3:0] grp_process_r_fu_301_w_02_address0;
wire    grp_process_r_fu_301_w_02_ce0;
wire    grp_process_r_fu_301_w_02_we0;
wire   [31:0] grp_process_r_fu_301_w_02_d0;
wire   [3:0] grp_process_r_fu_301_w_03_address0;
wire    grp_process_r_fu_301_w_03_ce0;
wire    grp_process_r_fu_301_w_03_we0;
wire   [31:0] grp_process_r_fu_301_w_03_d0;
wire   [3:0] grp_process_r_fu_301_w_014_address0;
wire    grp_process_r_fu_301_w_014_ce0;
wire    grp_process_r_fu_301_w_014_we0;
wire   [31:0] grp_process_r_fu_301_w_014_d0;
wire   [3:0] grp_process_r_fu_301_w_015_address0;
wire    grp_process_r_fu_301_w_015_ce0;
wire    grp_process_r_fu_301_w_015_we0;
wire   [31:0] grp_process_r_fu_301_w_015_d0;
wire   [3:0] grp_process_r_fu_301_w_016_address0;
wire    grp_process_r_fu_301_w_016_ce0;
wire    grp_process_r_fu_301_w_016_we0;
wire   [31:0] grp_process_r_fu_301_w_016_d0;
wire   [3:0] grp_process_r_fu_301_w_017_address0;
wire    grp_process_r_fu_301_w_017_ce0;
wire    grp_process_r_fu_301_w_017_we0;
wire   [31:0] grp_process_r_fu_301_w_017_d0;
wire   [3:0] grp_process_r_fu_301_w_028_address0;
wire    grp_process_r_fu_301_w_028_ce0;
wire    grp_process_r_fu_301_w_028_we0;
wire   [31:0] grp_process_r_fu_301_w_028_d0;
wire   [3:0] grp_process_r_fu_301_w_029_address0;
wire    grp_process_r_fu_301_w_029_ce0;
wire    grp_process_r_fu_301_w_029_we0;
wire   [31:0] grp_process_r_fu_301_w_029_d0;
wire   [3:0] grp_process_r_fu_301_w_0210_address0;
wire    grp_process_r_fu_301_w_0210_ce0;
wire    grp_process_r_fu_301_w_0210_we0;
wire   [31:0] grp_process_r_fu_301_w_0210_d0;
wire   [3:0] grp_process_r_fu_301_w_0211_address0;
wire    grp_process_r_fu_301_w_0211_ce0;
wire    grp_process_r_fu_301_w_0211_we0;
wire   [31:0] grp_process_r_fu_301_w_0211_d0;
wire   [3:0] grp_process_r_fu_301_w_0312_address0;
wire    grp_process_r_fu_301_w_0312_ce0;
wire    grp_process_r_fu_301_w_0312_we0;
wire   [31:0] grp_process_r_fu_301_w_0312_d0;
wire   [3:0] grp_process_r_fu_301_w_0313_address0;
wire    grp_process_r_fu_301_w_0313_ce0;
wire    grp_process_r_fu_301_w_0313_we0;
wire   [31:0] grp_process_r_fu_301_w_0313_d0;
wire   [3:0] grp_process_r_fu_301_w_0314_address0;
wire    grp_process_r_fu_301_w_0314_ce0;
wire    grp_process_r_fu_301_w_0314_we0;
wire   [31:0] grp_process_r_fu_301_w_0314_d0;
wire   [3:0] grp_process_r_fu_301_w_0315_address0;
wire    grp_process_r_fu_301_w_0315_ce0;
wire    grp_process_r_fu_301_w_0315_we0;
wire   [31:0] grp_process_r_fu_301_w_0315_d0;
reg   [3:0] ap_phi_mux_L_ro_phi_fu_261_p4;
reg    grp_process_r_fu_301_ap_start_reg;
wire   [63:0] zext_ln81_5_fu_533_p1;
wire    ap_block_pp0_stage0_01001;
wire   [4:0] tmp_2_fu_355_p3;
wire   [7:0] tmp_1_fu_347_p3;
wire   [7:0] zext_ln81_fu_363_p1;
wire   [7:0] sub_ln81_fu_367_p2;
wire   [7:0] zext_ln81_1_fu_373_p1;
wire   [0:0] icmp_ln77_fu_395_p2;
wire   [3:0] add_ln75_fu_389_p2;
wire   [4:0] tmp_4_fu_417_p3;
wire   [7:0] tmp_3_fu_409_p3;
wire   [7:0] zext_ln81_2_fu_425_p1;
wire   [4:0] tmp_5_fu_451_p3;
wire   [7:0] p_shl_cast_fu_443_p3;
wire   [7:0] zext_ln81_3_fu_459_p1;
wire   [7:0] sub_ln81_1_fu_429_p2;
wire   [7:0] add_ln81_fu_377_p2;
wire   [0:0] icmp_ln79_fu_483_p2;
wire   [0:0] xor_ln75_fu_477_p2;
wire   [3:0] select_ln75_fu_401_p3;
wire   [0:0] and_ln75_fu_489_p2;
wire   [0:0] or_ln77_fu_501_p2;
wire   [3:0] add_ln77_fu_495_p2;
wire   [7:0] sub_ln81_2_fu_463_p2;
wire   [7:0] zext_ln81_4_fu_515_p1;
wire   [7:0] add_ln81_1_fu_519_p2;
wire   [7:0] select_ln75_2_fu_469_p3;
wire   [7:0] select_ln77_1_fu_525_p3;
wire   [2:0] select_ln77_fu_507_p3;
wire   [6:0] add_ln77_1_fu_559_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_process_r_fu_301_ap_start_reg = 1'b0;
end

conv_acc3t_In_ddr_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IN_DDR_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IN_DDR_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IN_DDR_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IN_DDR_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IN_DDR_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IN_DDR_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IN_DDR_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IN_DDR_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_IN_DDR_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_IN_DDR_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IN_DDR_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IN_DDR_CACHE_VALUE ))
In_ddr_m_axi_U(
    .AWVALID(m_axi_In_ddr_AWVALID),
    .AWREADY(m_axi_In_ddr_AWREADY),
    .AWADDR(m_axi_In_ddr_AWADDR),
    .AWID(m_axi_In_ddr_AWID),
    .AWLEN(m_axi_In_ddr_AWLEN),
    .AWSIZE(m_axi_In_ddr_AWSIZE),
    .AWBURST(m_axi_In_ddr_AWBURST),
    .AWLOCK(m_axi_In_ddr_AWLOCK),
    .AWCACHE(m_axi_In_ddr_AWCACHE),
    .AWPROT(m_axi_In_ddr_AWPROT),
    .AWQOS(m_axi_In_ddr_AWQOS),
    .AWREGION(m_axi_In_ddr_AWREGION),
    .AWUSER(m_axi_In_ddr_AWUSER),
    .WVALID(m_axi_In_ddr_WVALID),
    .WREADY(m_axi_In_ddr_WREADY),
    .WDATA(m_axi_In_ddr_WDATA),
    .WSTRB(m_axi_In_ddr_WSTRB),
    .WLAST(m_axi_In_ddr_WLAST),
    .WID(m_axi_In_ddr_WID),
    .WUSER(m_axi_In_ddr_WUSER),
    .ARVALID(m_axi_In_ddr_ARVALID),
    .ARREADY(m_axi_In_ddr_ARREADY),
    .ARADDR(m_axi_In_ddr_ARADDR),
    .ARID(m_axi_In_ddr_ARID),
    .ARLEN(m_axi_In_ddr_ARLEN),
    .ARSIZE(m_axi_In_ddr_ARSIZE),
    .ARBURST(m_axi_In_ddr_ARBURST),
    .ARLOCK(m_axi_In_ddr_ARLOCK),
    .ARCACHE(m_axi_In_ddr_ARCACHE),
    .ARPROT(m_axi_In_ddr_ARPROT),
    .ARQOS(m_axi_In_ddr_ARQOS),
    .ARREGION(m_axi_In_ddr_ARREGION),
    .ARUSER(m_axi_In_ddr_ARUSER),
    .RVALID(m_axi_In_ddr_RVALID),
    .RREADY(m_axi_In_ddr_RREADY),
    .RDATA(m_axi_In_ddr_RDATA),
    .RLAST(m_axi_In_ddr_RLAST),
    .RID(m_axi_In_ddr_RID),
    .RUSER(m_axi_In_ddr_RUSER),
    .RRESP(m_axi_In_ddr_RRESP),
    .BVALID(m_axi_In_ddr_BVALID),
    .BREADY(m_axi_In_ddr_BREADY),
    .BRESP(m_axi_In_ddr_BRESP),
    .BID(m_axi_In_ddr_BID),
    .BUSER(m_axi_In_ddr_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(In_ddr_ARVALID),
    .I_ARREADY(In_ddr_ARREADY),
    .I_ARADDR(grp_process_r_fu_301_m_axi_In_ddr_ARADDR),
    .I_ARID(grp_process_r_fu_301_m_axi_In_ddr_ARID),
    .I_ARLEN(grp_process_r_fu_301_m_axi_In_ddr_ARLEN),
    .I_ARSIZE(grp_process_r_fu_301_m_axi_In_ddr_ARSIZE),
    .I_ARLOCK(grp_process_r_fu_301_m_axi_In_ddr_ARLOCK),
    .I_ARCACHE(grp_process_r_fu_301_m_axi_In_ddr_ARCACHE),
    .I_ARQOS(grp_process_r_fu_301_m_axi_In_ddr_ARQOS),
    .I_ARPROT(grp_process_r_fu_301_m_axi_In_ddr_ARPROT),
    .I_ARUSER(grp_process_r_fu_301_m_axi_In_ddr_ARUSER),
    .I_ARBURST(grp_process_r_fu_301_m_axi_In_ddr_ARBURST),
    .I_ARREGION(grp_process_r_fu_301_m_axi_In_ddr_ARREGION),
    .I_RVALID(In_ddr_RVALID),
    .I_RREADY(In_ddr_RREADY),
    .I_RDATA(In_ddr_RDATA),
    .I_RID(In_ddr_RID),
    .I_RUSER(In_ddr_RUSER),
    .I_RRESP(In_ddr_RRESP),
    .I_RLAST(In_ddr_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(In_ddr_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(In_ddr_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(In_ddr_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(In_ddr_BRESP),
    .I_BID(In_ddr_BID),
    .I_BUSER(In_ddr_BUSER)
);

conv_acc3t_W_ddr_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_W_DDR_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_W_DDR_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_W_DDR_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_W_DDR_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_W_DDR_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_W_DDR_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_W_DDR_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_W_DDR_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_W_DDR_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_W_DDR_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_W_DDR_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_W_DDR_CACHE_VALUE ))
W_ddr_m_axi_U(
    .AWVALID(m_axi_W_ddr_AWVALID),
    .AWREADY(m_axi_W_ddr_AWREADY),
    .AWADDR(m_axi_W_ddr_AWADDR),
    .AWID(m_axi_W_ddr_AWID),
    .AWLEN(m_axi_W_ddr_AWLEN),
    .AWSIZE(m_axi_W_ddr_AWSIZE),
    .AWBURST(m_axi_W_ddr_AWBURST),
    .AWLOCK(m_axi_W_ddr_AWLOCK),
    .AWCACHE(m_axi_W_ddr_AWCACHE),
    .AWPROT(m_axi_W_ddr_AWPROT),
    .AWQOS(m_axi_W_ddr_AWQOS),
    .AWREGION(m_axi_W_ddr_AWREGION),
    .AWUSER(m_axi_W_ddr_AWUSER),
    .WVALID(m_axi_W_ddr_WVALID),
    .WREADY(m_axi_W_ddr_WREADY),
    .WDATA(m_axi_W_ddr_WDATA),
    .WSTRB(m_axi_W_ddr_WSTRB),
    .WLAST(m_axi_W_ddr_WLAST),
    .WID(m_axi_W_ddr_WID),
    .WUSER(m_axi_W_ddr_WUSER),
    .ARVALID(m_axi_W_ddr_ARVALID),
    .ARREADY(m_axi_W_ddr_ARREADY),
    .ARADDR(m_axi_W_ddr_ARADDR),
    .ARID(m_axi_W_ddr_ARID),
    .ARLEN(m_axi_W_ddr_ARLEN),
    .ARSIZE(m_axi_W_ddr_ARSIZE),
    .ARBURST(m_axi_W_ddr_ARBURST),
    .ARLOCK(m_axi_W_ddr_ARLOCK),
    .ARCACHE(m_axi_W_ddr_ARCACHE),
    .ARPROT(m_axi_W_ddr_ARPROT),
    .ARQOS(m_axi_W_ddr_ARQOS),
    .ARREGION(m_axi_W_ddr_ARREGION),
    .ARUSER(m_axi_W_ddr_ARUSER),
    .RVALID(m_axi_W_ddr_RVALID),
    .RREADY(m_axi_W_ddr_RREADY),
    .RDATA(m_axi_W_ddr_RDATA),
    .RLAST(m_axi_W_ddr_RLAST),
    .RID(m_axi_W_ddr_RID),
    .RUSER(m_axi_W_ddr_RUSER),
    .RRESP(m_axi_W_ddr_RRESP),
    .BVALID(m_axi_W_ddr_BVALID),
    .BREADY(m_axi_W_ddr_BREADY),
    .BRESP(m_axi_W_ddr_BRESP),
    .BID(m_axi_W_ddr_BID),
    .BUSER(m_axi_W_ddr_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(W_ddr_ARVALID),
    .I_ARREADY(W_ddr_ARREADY),
    .I_ARADDR(grp_process_r_fu_301_m_axi_W_ddr_ARADDR),
    .I_ARID(grp_process_r_fu_301_m_axi_W_ddr_ARID),
    .I_ARLEN(grp_process_r_fu_301_m_axi_W_ddr_ARLEN),
    .I_ARSIZE(grp_process_r_fu_301_m_axi_W_ddr_ARSIZE),
    .I_ARLOCK(grp_process_r_fu_301_m_axi_W_ddr_ARLOCK),
    .I_ARCACHE(grp_process_r_fu_301_m_axi_W_ddr_ARCACHE),
    .I_ARQOS(grp_process_r_fu_301_m_axi_W_ddr_ARQOS),
    .I_ARPROT(grp_process_r_fu_301_m_axi_W_ddr_ARPROT),
    .I_ARUSER(grp_process_r_fu_301_m_axi_W_ddr_ARUSER),
    .I_ARBURST(grp_process_r_fu_301_m_axi_W_ddr_ARBURST),
    .I_ARREGION(grp_process_r_fu_301_m_axi_W_ddr_ARREGION),
    .I_RVALID(W_ddr_RVALID),
    .I_RREADY(W_ddr_RREADY),
    .I_RDATA(W_ddr_RDATA),
    .I_RID(W_ddr_RID),
    .I_RUSER(W_ddr_RUSER),
    .I_RRESP(W_ddr_RRESP),
    .I_RLAST(W_ddr_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(W_ddr_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(W_ddr_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(W_ddr_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(W_ddr_BRESP),
    .I_BID(W_ddr_BID),
    .I_BUSER(W_ddr_BUSER)
);

conv_acc3t_Out_ddr_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_DDR_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_DDR_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_DDR_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_DDR_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_DDR_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_DDR_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_DDR_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_DDR_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_OUT_DDR_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_OUT_DDR_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_DDR_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_DDR_CACHE_VALUE ))
Out_ddr_m_axi_U(
    .AWVALID(m_axi_Out_ddr_AWVALID),
    .AWREADY(m_axi_Out_ddr_AWREADY),
    .AWADDR(m_axi_Out_ddr_AWADDR),
    .AWID(m_axi_Out_ddr_AWID),
    .AWLEN(m_axi_Out_ddr_AWLEN),
    .AWSIZE(m_axi_Out_ddr_AWSIZE),
    .AWBURST(m_axi_Out_ddr_AWBURST),
    .AWLOCK(m_axi_Out_ddr_AWLOCK),
    .AWCACHE(m_axi_Out_ddr_AWCACHE),
    .AWPROT(m_axi_Out_ddr_AWPROT),
    .AWQOS(m_axi_Out_ddr_AWQOS),
    .AWREGION(m_axi_Out_ddr_AWREGION),
    .AWUSER(m_axi_Out_ddr_AWUSER),
    .WVALID(m_axi_Out_ddr_WVALID),
    .WREADY(m_axi_Out_ddr_WREADY),
    .WDATA(m_axi_Out_ddr_WDATA),
    .WSTRB(m_axi_Out_ddr_WSTRB),
    .WLAST(m_axi_Out_ddr_WLAST),
    .WID(m_axi_Out_ddr_WID),
    .WUSER(m_axi_Out_ddr_WUSER),
    .ARVALID(m_axi_Out_ddr_ARVALID),
    .ARREADY(m_axi_Out_ddr_ARREADY),
    .ARADDR(m_axi_Out_ddr_ARADDR),
    .ARID(m_axi_Out_ddr_ARID),
    .ARLEN(m_axi_Out_ddr_ARLEN),
    .ARSIZE(m_axi_Out_ddr_ARSIZE),
    .ARBURST(m_axi_Out_ddr_ARBURST),
    .ARLOCK(m_axi_Out_ddr_ARLOCK),
    .ARCACHE(m_axi_Out_ddr_ARCACHE),
    .ARPROT(m_axi_Out_ddr_ARPROT),
    .ARQOS(m_axi_Out_ddr_ARQOS),
    .ARREGION(m_axi_Out_ddr_ARREGION),
    .ARUSER(m_axi_Out_ddr_ARUSER),
    .RVALID(m_axi_Out_ddr_RVALID),
    .RREADY(m_axi_Out_ddr_RREADY),
    .RDATA(m_axi_Out_ddr_RDATA),
    .RLAST(m_axi_Out_ddr_RLAST),
    .RID(m_axi_Out_ddr_RID),
    .RUSER(m_axi_Out_ddr_RUSER),
    .RRESP(m_axi_Out_ddr_RRESP),
    .BVALID(m_axi_Out_ddr_BVALID),
    .BREADY(m_axi_Out_ddr_BREADY),
    .BRESP(m_axi_Out_ddr_BRESP),
    .BID(m_axi_Out_ddr_BID),
    .BUSER(m_axi_Out_ddr_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(Out_ddr_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(Out_ddr_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(Out_ddr_RDATA),
    .I_RID(Out_ddr_RID),
    .I_RUSER(Out_ddr_RUSER),
    .I_RRESP(Out_ddr_RRESP),
    .I_RLAST(Out_ddr_RLAST),
    .I_AWVALID(Out_ddr_AWVALID),
    .I_AWREADY(Out_ddr_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd784),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(Out_ddr_WVALID),
    .I_WREADY(Out_ddr_WREADY),
    .I_WDATA(Out_ddr_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(Out_ddr_BVALID),
    .I_BREADY(Out_ddr_BREADY),
    .I_BRESP(Out_ddr_BRESP),
    .I_BID(Out_ddr_BID),
    .I_BUSER(Out_ddr_BUSER)
);

conv_acc3t_out_0 #(
    .DataWidth( 32 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
out_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_0_address0),
    .ce0(out_0_ce0),
    .q0(out_0_q0)
);

conv_acc3t_out_0 #(
    .DataWidth( 32 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
out_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_1_address0),
    .ce0(out_1_ce0),
    .q0(out_1_q0)
);

conv_acc3t_out_0 #(
    .DataWidth( 32 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
out_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_2_address0),
    .ce0(out_2_ce0),
    .q0(out_2_q0)
);

conv_acc3t_out_0 #(
    .DataWidth( 32 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
out_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_3_address0),
    .ce0(out_3_ce0),
    .q0(out_3_q0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_0_address0),
    .ce0(grp_process_r_fu_301_w_0_ce0),
    .we0(grp_process_r_fu_301_w_0_we0),
    .d0(grp_process_r_fu_301_w_0_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_01_address0),
    .ce0(grp_process_r_fu_301_w_01_ce0),
    .we0(grp_process_r_fu_301_w_01_we0),
    .d0(grp_process_r_fu_301_w_01_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_02_address0),
    .ce0(grp_process_r_fu_301_w_02_ce0),
    .we0(grp_process_r_fu_301_w_02_we0),
    .d0(grp_process_r_fu_301_w_02_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_03_address0),
    .ce0(grp_process_r_fu_301_w_03_ce0),
    .we0(grp_process_r_fu_301_w_03_we0),
    .d0(grp_process_r_fu_301_w_03_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_014_address0),
    .ce0(grp_process_r_fu_301_w_014_ce0),
    .we0(grp_process_r_fu_301_w_014_we0),
    .d0(grp_process_r_fu_301_w_014_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_015_address0),
    .ce0(grp_process_r_fu_301_w_015_ce0),
    .we0(grp_process_r_fu_301_w_015_we0),
    .d0(grp_process_r_fu_301_w_015_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_016_address0),
    .ce0(grp_process_r_fu_301_w_016_ce0),
    .we0(grp_process_r_fu_301_w_016_we0),
    .d0(grp_process_r_fu_301_w_016_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_017_address0),
    .ce0(grp_process_r_fu_301_w_017_ce0),
    .we0(grp_process_r_fu_301_w_017_we0),
    .d0(grp_process_r_fu_301_w_017_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_028_address0),
    .ce0(grp_process_r_fu_301_w_028_ce0),
    .we0(grp_process_r_fu_301_w_028_we0),
    .d0(grp_process_r_fu_301_w_028_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_029_address0),
    .ce0(grp_process_r_fu_301_w_029_ce0),
    .we0(grp_process_r_fu_301_w_029_we0),
    .d0(grp_process_r_fu_301_w_029_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_0210_address0),
    .ce0(grp_process_r_fu_301_w_0210_ce0),
    .we0(grp_process_r_fu_301_w_0210_we0),
    .d0(grp_process_r_fu_301_w_0210_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_0211_address0),
    .ce0(grp_process_r_fu_301_w_0211_ce0),
    .we0(grp_process_r_fu_301_w_0211_we0),
    .d0(grp_process_r_fu_301_w_0211_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_0312_address0),
    .ce0(grp_process_r_fu_301_w_0312_ce0),
    .we0(grp_process_r_fu_301_w_0312_we0),
    .d0(grp_process_r_fu_301_w_0312_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_0313_address0),
    .ce0(grp_process_r_fu_301_w_0313_ce0),
    .we0(grp_process_r_fu_301_w_0313_we0),
    .d0(grp_process_r_fu_301_w_0313_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_0314_address0),
    .ce0(grp_process_r_fu_301_w_0314_ce0),
    .we0(grp_process_r_fu_301_w_0314_we0),
    .d0(grp_process_r_fu_301_w_0314_d0)
);

conv_acc3t_w_0_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
w_0_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_process_r_fu_301_w_0315_address0),
    .ce0(grp_process_r_fu_301_w_0315_ce0),
    .we0(grp_process_r_fu_301_w_0315_we0),
    .d0(grp_process_r_fu_301_w_0315_d0)
);

conv_acc3t_process_r grp_process_r_fu_301(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_process_r_fu_301_ap_start),
    .ap_done(grp_process_r_fu_301_ap_done),
    .ap_idle(grp_process_r_fu_301_ap_idle),
    .ap_ready(grp_process_r_fu_301_ap_ready),
    .m_axi_In_ddr_AWVALID(grp_process_r_fu_301_m_axi_In_ddr_AWVALID),
    .m_axi_In_ddr_AWREADY(1'b0),
    .m_axi_In_ddr_AWADDR(grp_process_r_fu_301_m_axi_In_ddr_AWADDR),
    .m_axi_In_ddr_AWID(grp_process_r_fu_301_m_axi_In_ddr_AWID),
    .m_axi_In_ddr_AWLEN(grp_process_r_fu_301_m_axi_In_ddr_AWLEN),
    .m_axi_In_ddr_AWSIZE(grp_process_r_fu_301_m_axi_In_ddr_AWSIZE),
    .m_axi_In_ddr_AWBURST(grp_process_r_fu_301_m_axi_In_ddr_AWBURST),
    .m_axi_In_ddr_AWLOCK(grp_process_r_fu_301_m_axi_In_ddr_AWLOCK),
    .m_axi_In_ddr_AWCACHE(grp_process_r_fu_301_m_axi_In_ddr_AWCACHE),
    .m_axi_In_ddr_AWPROT(grp_process_r_fu_301_m_axi_In_ddr_AWPROT),
    .m_axi_In_ddr_AWQOS(grp_process_r_fu_301_m_axi_In_ddr_AWQOS),
    .m_axi_In_ddr_AWREGION(grp_process_r_fu_301_m_axi_In_ddr_AWREGION),
    .m_axi_In_ddr_AWUSER(grp_process_r_fu_301_m_axi_In_ddr_AWUSER),
    .m_axi_In_ddr_WVALID(grp_process_r_fu_301_m_axi_In_ddr_WVALID),
    .m_axi_In_ddr_WREADY(1'b0),
    .m_axi_In_ddr_WDATA(grp_process_r_fu_301_m_axi_In_ddr_WDATA),
    .m_axi_In_ddr_WSTRB(grp_process_r_fu_301_m_axi_In_ddr_WSTRB),
    .m_axi_In_ddr_WLAST(grp_process_r_fu_301_m_axi_In_ddr_WLAST),
    .m_axi_In_ddr_WID(grp_process_r_fu_301_m_axi_In_ddr_WID),
    .m_axi_In_ddr_WUSER(grp_process_r_fu_301_m_axi_In_ddr_WUSER),
    .m_axi_In_ddr_ARVALID(grp_process_r_fu_301_m_axi_In_ddr_ARVALID),
    .m_axi_In_ddr_ARREADY(In_ddr_ARREADY),
    .m_axi_In_ddr_ARADDR(grp_process_r_fu_301_m_axi_In_ddr_ARADDR),
    .m_axi_In_ddr_ARID(grp_process_r_fu_301_m_axi_In_ddr_ARID),
    .m_axi_In_ddr_ARLEN(grp_process_r_fu_301_m_axi_In_ddr_ARLEN),
    .m_axi_In_ddr_ARSIZE(grp_process_r_fu_301_m_axi_In_ddr_ARSIZE),
    .m_axi_In_ddr_ARBURST(grp_process_r_fu_301_m_axi_In_ddr_ARBURST),
    .m_axi_In_ddr_ARLOCK(grp_process_r_fu_301_m_axi_In_ddr_ARLOCK),
    .m_axi_In_ddr_ARCACHE(grp_process_r_fu_301_m_axi_In_ddr_ARCACHE),
    .m_axi_In_ddr_ARPROT(grp_process_r_fu_301_m_axi_In_ddr_ARPROT),
    .m_axi_In_ddr_ARQOS(grp_process_r_fu_301_m_axi_In_ddr_ARQOS),
    .m_axi_In_ddr_ARREGION(grp_process_r_fu_301_m_axi_In_ddr_ARREGION),
    .m_axi_In_ddr_ARUSER(grp_process_r_fu_301_m_axi_In_ddr_ARUSER),
    .m_axi_In_ddr_RVALID(In_ddr_RVALID),
    .m_axi_In_ddr_RREADY(grp_process_r_fu_301_m_axi_In_ddr_RREADY),
    .m_axi_In_ddr_RDATA(In_ddr_RDATA),
    .m_axi_In_ddr_RLAST(In_ddr_RLAST),
    .m_axi_In_ddr_RID(In_ddr_RID),
    .m_axi_In_ddr_RUSER(In_ddr_RUSER),
    .m_axi_In_ddr_RRESP(In_ddr_RRESP),
    .m_axi_In_ddr_BVALID(1'b0),
    .m_axi_In_ddr_BREADY(grp_process_r_fu_301_m_axi_In_ddr_BREADY),
    .m_axi_In_ddr_BRESP(2'd0),
    .m_axi_In_ddr_BID(1'd0),
    .m_axi_In_ddr_BUSER(1'd0),
    .m_axi_W_ddr_AWVALID(grp_process_r_fu_301_m_axi_W_ddr_AWVALID),
    .m_axi_W_ddr_AWREADY(1'b0),
    .m_axi_W_ddr_AWADDR(grp_process_r_fu_301_m_axi_W_ddr_AWADDR),
    .m_axi_W_ddr_AWID(grp_process_r_fu_301_m_axi_W_ddr_AWID),
    .m_axi_W_ddr_AWLEN(grp_process_r_fu_301_m_axi_W_ddr_AWLEN),
    .m_axi_W_ddr_AWSIZE(grp_process_r_fu_301_m_axi_W_ddr_AWSIZE),
    .m_axi_W_ddr_AWBURST(grp_process_r_fu_301_m_axi_W_ddr_AWBURST),
    .m_axi_W_ddr_AWLOCK(grp_process_r_fu_301_m_axi_W_ddr_AWLOCK),
    .m_axi_W_ddr_AWCACHE(grp_process_r_fu_301_m_axi_W_ddr_AWCACHE),
    .m_axi_W_ddr_AWPROT(grp_process_r_fu_301_m_axi_W_ddr_AWPROT),
    .m_axi_W_ddr_AWQOS(grp_process_r_fu_301_m_axi_W_ddr_AWQOS),
    .m_axi_W_ddr_AWREGION(grp_process_r_fu_301_m_axi_W_ddr_AWREGION),
    .m_axi_W_ddr_AWUSER(grp_process_r_fu_301_m_axi_W_ddr_AWUSER),
    .m_axi_W_ddr_WVALID(grp_process_r_fu_301_m_axi_W_ddr_WVALID),
    .m_axi_W_ddr_WREADY(1'b0),
    .m_axi_W_ddr_WDATA(grp_process_r_fu_301_m_axi_W_ddr_WDATA),
    .m_axi_W_ddr_WSTRB(grp_process_r_fu_301_m_axi_W_ddr_WSTRB),
    .m_axi_W_ddr_WLAST(grp_process_r_fu_301_m_axi_W_ddr_WLAST),
    .m_axi_W_ddr_WID(grp_process_r_fu_301_m_axi_W_ddr_WID),
    .m_axi_W_ddr_WUSER(grp_process_r_fu_301_m_axi_W_ddr_WUSER),
    .m_axi_W_ddr_ARVALID(grp_process_r_fu_301_m_axi_W_ddr_ARVALID),
    .m_axi_W_ddr_ARREADY(W_ddr_ARREADY),
    .m_axi_W_ddr_ARADDR(grp_process_r_fu_301_m_axi_W_ddr_ARADDR),
    .m_axi_W_ddr_ARID(grp_process_r_fu_301_m_axi_W_ddr_ARID),
    .m_axi_W_ddr_ARLEN(grp_process_r_fu_301_m_axi_W_ddr_ARLEN),
    .m_axi_W_ddr_ARSIZE(grp_process_r_fu_301_m_axi_W_ddr_ARSIZE),
    .m_axi_W_ddr_ARBURST(grp_process_r_fu_301_m_axi_W_ddr_ARBURST),
    .m_axi_W_ddr_ARLOCK(grp_process_r_fu_301_m_axi_W_ddr_ARLOCK),
    .m_axi_W_ddr_ARCACHE(grp_process_r_fu_301_m_axi_W_ddr_ARCACHE),
    .m_axi_W_ddr_ARPROT(grp_process_r_fu_301_m_axi_W_ddr_ARPROT),
    .m_axi_W_ddr_ARQOS(grp_process_r_fu_301_m_axi_W_ddr_ARQOS),
    .m_axi_W_ddr_ARREGION(grp_process_r_fu_301_m_axi_W_ddr_ARREGION),
    .m_axi_W_ddr_ARUSER(grp_process_r_fu_301_m_axi_W_ddr_ARUSER),
    .m_axi_W_ddr_RVALID(W_ddr_RVALID),
    .m_axi_W_ddr_RREADY(grp_process_r_fu_301_m_axi_W_ddr_RREADY),
    .m_axi_W_ddr_RDATA(W_ddr_RDATA),
    .m_axi_W_ddr_RLAST(W_ddr_RLAST),
    .m_axi_W_ddr_RID(W_ddr_RID),
    .m_axi_W_ddr_RUSER(W_ddr_RUSER),
    .m_axi_W_ddr_RRESP(W_ddr_RRESP),
    .m_axi_W_ddr_BVALID(1'b0),
    .m_axi_W_ddr_BREADY(grp_process_r_fu_301_m_axi_W_ddr_BREADY),
    .m_axi_W_ddr_BRESP(2'd0),
    .m_axi_W_ddr_BID(1'd0),
    .m_axi_W_ddr_BUSER(1'd0),
    .w_0_address0(grp_process_r_fu_301_w_0_address0),
    .w_0_ce0(grp_process_r_fu_301_w_0_ce0),
    .w_0_we0(grp_process_r_fu_301_w_0_we0),
    .w_0_d0(grp_process_r_fu_301_w_0_d0),
    .w_01_address0(grp_process_r_fu_301_w_01_address0),
    .w_01_ce0(grp_process_r_fu_301_w_01_ce0),
    .w_01_we0(grp_process_r_fu_301_w_01_we0),
    .w_01_d0(grp_process_r_fu_301_w_01_d0),
    .w_02_address0(grp_process_r_fu_301_w_02_address0),
    .w_02_ce0(grp_process_r_fu_301_w_02_ce0),
    .w_02_we0(grp_process_r_fu_301_w_02_we0),
    .w_02_d0(grp_process_r_fu_301_w_02_d0),
    .w_03_address0(grp_process_r_fu_301_w_03_address0),
    .w_03_ce0(grp_process_r_fu_301_w_03_ce0),
    .w_03_we0(grp_process_r_fu_301_w_03_we0),
    .w_03_d0(grp_process_r_fu_301_w_03_d0),
    .w_014_address0(grp_process_r_fu_301_w_014_address0),
    .w_014_ce0(grp_process_r_fu_301_w_014_ce0),
    .w_014_we0(grp_process_r_fu_301_w_014_we0),
    .w_014_d0(grp_process_r_fu_301_w_014_d0),
    .w_015_address0(grp_process_r_fu_301_w_015_address0),
    .w_015_ce0(grp_process_r_fu_301_w_015_ce0),
    .w_015_we0(grp_process_r_fu_301_w_015_we0),
    .w_015_d0(grp_process_r_fu_301_w_015_d0),
    .w_016_address0(grp_process_r_fu_301_w_016_address0),
    .w_016_ce0(grp_process_r_fu_301_w_016_ce0),
    .w_016_we0(grp_process_r_fu_301_w_016_we0),
    .w_016_d0(grp_process_r_fu_301_w_016_d0),
    .w_017_address0(grp_process_r_fu_301_w_017_address0),
    .w_017_ce0(grp_process_r_fu_301_w_017_ce0),
    .w_017_we0(grp_process_r_fu_301_w_017_we0),
    .w_017_d0(grp_process_r_fu_301_w_017_d0),
    .w_028_address0(grp_process_r_fu_301_w_028_address0),
    .w_028_ce0(grp_process_r_fu_301_w_028_ce0),
    .w_028_we0(grp_process_r_fu_301_w_028_we0),
    .w_028_d0(grp_process_r_fu_301_w_028_d0),
    .w_029_address0(grp_process_r_fu_301_w_029_address0),
    .w_029_ce0(grp_process_r_fu_301_w_029_ce0),
    .w_029_we0(grp_process_r_fu_301_w_029_we0),
    .w_029_d0(grp_process_r_fu_301_w_029_d0),
    .w_0210_address0(grp_process_r_fu_301_w_0210_address0),
    .w_0210_ce0(grp_process_r_fu_301_w_0210_ce0),
    .w_0210_we0(grp_process_r_fu_301_w_0210_we0),
    .w_0210_d0(grp_process_r_fu_301_w_0210_d0),
    .w_0211_address0(grp_process_r_fu_301_w_0211_address0),
    .w_0211_ce0(grp_process_r_fu_301_w_0211_ce0),
    .w_0211_we0(grp_process_r_fu_301_w_0211_we0),
    .w_0211_d0(grp_process_r_fu_301_w_0211_d0),
    .w_0312_address0(grp_process_r_fu_301_w_0312_address0),
    .w_0312_ce0(grp_process_r_fu_301_w_0312_ce0),
    .w_0312_we0(grp_process_r_fu_301_w_0312_we0),
    .w_0312_d0(grp_process_r_fu_301_w_0312_d0),
    .w_0313_address0(grp_process_r_fu_301_w_0313_address0),
    .w_0313_ce0(grp_process_r_fu_301_w_0313_ce0),
    .w_0313_we0(grp_process_r_fu_301_w_0313_we0),
    .w_0313_d0(grp_process_r_fu_301_w_0313_d0),
    .w_0314_address0(grp_process_r_fu_301_w_0314_address0),
    .w_0314_ce0(grp_process_r_fu_301_w_0314_ce0),
    .w_0314_we0(grp_process_r_fu_301_w_0314_we0),
    .w_0314_d0(grp_process_r_fu_301_w_0314_d0),
    .w_0315_address0(grp_process_r_fu_301_w_0315_address0),
    .w_0315_ce0(grp_process_r_fu_301_w_0315_ce0),
    .w_0315_we0(grp_process_r_fu_301_w_0315_we0),
    .w_0315_d0(grp_process_r_fu_301_w_0315_d0)
);

conv_acc3t_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U19(
    .din0(out_0_q0),
    .din1(out_1_q0),
    .din2(out_2_q0),
    .din3(out_3_q0),
    .din4(trunc_ln81_reg_629),
    .dout(tmp_fu_573_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_process_r_fu_301_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((grp_process_r_fu_301_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_process_r_fu_301_ap_start_reg <= 1'b0;
    end else begin
        if ((~((1'b0 == Out_ddr_AWREADY) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_process_r_fu_301_ap_start_reg <= 1'b1;
        end else if ((grp_process_r_fu_301_ap_ready == 1'b1)) begin
            grp_process_r_fu_301_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_383_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        L_cho_reg_290 <= add_ln79_fu_553_p2;
    end else if (((grp_process_r_fu_301_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        L_cho_reg_290 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_383_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        L_co_reg_279 <= select_ln77_2_fu_541_p3;
    end else if (((grp_process_r_fu_301_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        L_co_reg_279 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln75_reg_595 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        L_ro_reg_257 <= select_ln75_1_reg_599;
    end else if (((grp_process_r_fu_301_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        L_ro_reg_257 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_383_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten33_reg_246 <= add_ln75_1_fu_341_p2;
    end else if (((grp_process_r_fu_301_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten33_reg_246 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_383_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_268 <= select_ln77_3_fu_565_p3;
    end else if (((grp_process_r_fu_301_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_268 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln75_reg_595 <= icmp_ln75_fu_383_p2;
        icmp_ln75_reg_595_pp0_iter1_reg <= icmp_ln75_reg_595;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_383_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln75_1_reg_599 <= select_ln75_1_fu_435_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln75_reg_595 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_644 <= tmp_fu_573_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_383_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln81_reg_629 <= trunc_ln81_fu_549_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        In_ddr_ARVALID = grp_process_r_fu_301_m_axi_In_ddr_ARVALID;
    end else begin
        In_ddr_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        In_ddr_RREADY = grp_process_r_fu_301_m_axi_In_ddr_RREADY;
    end else begin
        In_ddr_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Out_ddr_AWREADY) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Out_ddr_AWVALID = 1'b1;
    end else begin
        Out_ddr_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == Out_ddr_BVALID) & (1'b1 == ap_CS_fsm_state10))) begin
        Out_ddr_BREADY = 1'b1;
    end else begin
        Out_ddr_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_595_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Out_ddr_WVALID = 1'b1;
    end else begin
        Out_ddr_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        Out_ddr_blk_n_AW = m_axi_Out_ddr_AWREADY;
    end else begin
        Out_ddr_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Out_ddr_blk_n_B = m_axi_Out_ddr_BVALID;
    end else begin
        Out_ddr_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_595_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Out_ddr_blk_n_W = m_axi_Out_ddr_WREADY;
    end else begin
        Out_ddr_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        W_ddr_ARVALID = grp_process_r_fu_301_m_axi_W_ddr_ARVALID;
    end else begin
        W_ddr_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        W_ddr_RREADY = grp_process_r_fu_301_m_axi_W_ddr_RREADY;
    end else begin
        W_ddr_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln75_fu_383_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == Out_ddr_BVALID) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln75_reg_595 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_L_ro_phi_fu_261_p4 = select_ln75_1_reg_599;
    end else begin
        ap_phi_mux_L_ro_phi_fu_261_p4 = L_ro_reg_257;
    end
end

always @ (*) begin
    if (((1'b1 == Out_ddr_BVALID) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_0_ce0 = 1'b1;
    end else begin
        out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_1_ce0 = 1'b1;
    end else begin
        out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_2_ce0 = 1'b1;
    end else begin
        out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_3_ce0 = 1'b1;
    end else begin
        out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == Out_ddr_AWREADY) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_process_r_fu_301_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln75_fu_383_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln75_fu_383_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == Out_ddr_BVALID) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Out_ddr_WDATA = tmp_reg_644;

assign add_ln75_1_fu_341_p2 = (indvar_flatten33_reg_246 + 10'd1);

assign add_ln75_fu_389_p2 = (ap_phi_mux_L_ro_phi_fu_261_p4 + 4'd1);

assign add_ln77_1_fu_559_p2 = (indvar_flatten_reg_268 + 7'd1);

assign add_ln77_fu_495_p2 = (select_ln75_fu_401_p3 + 4'd1);

assign add_ln79_fu_553_p2 = (select_ln77_fu_507_p3 + 3'd1);

assign add_ln81_1_fu_519_p2 = (sub_ln81_2_fu_463_p2 + zext_ln81_4_fu_515_p1);

assign add_ln81_fu_377_p2 = (sub_ln81_fu_367_p2 + zext_ln81_1_fu_373_p1);

assign and_ln75_fu_489_p2 = (xor_ln75_fu_477_p2 & icmp_ln79_fu_483_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((1'b0 == Out_ddr_WREADY) & (icmp_ln75_reg_595_pp0_iter1_reg == 1'd0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_process_r_fu_301_ap_start = grp_process_r_fu_301_ap_start_reg;

assign icmp_ln75_fu_383_p2 = ((indvar_flatten33_reg_246 == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_395_p2 = ((indvar_flatten_reg_268 == 7'd56) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_483_p2 = ((L_cho_reg_290 == 3'd4) ? 1'b1 : 1'b0);

assign or_ln77_fu_501_p2 = (icmp_ln77_fu_395_p2 | and_ln75_fu_489_p2);

assign out_0_address0 = zext_ln81_5_fu_533_p1;

assign out_1_address0 = zext_ln81_5_fu_533_p1;

assign out_2_address0 = zext_ln81_5_fu_533_p1;

assign out_3_address0 = zext_ln81_5_fu_533_p1;

assign p_shl_cast_fu_443_p3 = {{select_ln75_1_fu_435_p3}, {4'd0}};

assign select_ln75_1_fu_435_p3 = ((icmp_ln77_fu_395_p2[0:0] == 1'b1) ? add_ln75_fu_389_p2 : ap_phi_mux_L_ro_phi_fu_261_p4);

assign select_ln75_2_fu_469_p3 = ((icmp_ln77_fu_395_p2[0:0] == 1'b1) ? sub_ln81_1_fu_429_p2 : add_ln81_fu_377_p2);

assign select_ln75_fu_401_p3 = ((icmp_ln77_fu_395_p2[0:0] == 1'b1) ? 4'd0 : L_co_reg_279);

assign select_ln77_1_fu_525_p3 = ((and_ln75_fu_489_p2[0:0] == 1'b1) ? add_ln81_1_fu_519_p2 : select_ln75_2_fu_469_p3);

assign select_ln77_2_fu_541_p3 = ((and_ln75_fu_489_p2[0:0] == 1'b1) ? add_ln77_fu_495_p2 : select_ln75_fu_401_p3);

assign select_ln77_3_fu_565_p3 = ((icmp_ln77_fu_395_p2[0:0] == 1'b1) ? 7'd1 : add_ln77_1_fu_559_p2);

assign select_ln77_fu_507_p3 = ((or_ln77_fu_501_p2[0:0] == 1'b1) ? 3'd0 : L_cho_reg_290);

assign sub_ln81_1_fu_429_p2 = (tmp_3_fu_409_p3 - zext_ln81_2_fu_425_p1);

assign sub_ln81_2_fu_463_p2 = (p_shl_cast_fu_443_p3 - zext_ln81_3_fu_459_p1);

assign sub_ln81_fu_367_p2 = (tmp_1_fu_347_p3 - zext_ln81_fu_363_p1);

assign tmp_1_fu_347_p3 = {{ap_phi_mux_L_ro_phi_fu_261_p4}, {4'd0}};

assign tmp_2_fu_355_p3 = {{ap_phi_mux_L_ro_phi_fu_261_p4}, {1'd0}};

assign tmp_3_fu_409_p3 = {{add_ln75_fu_389_p2}, {4'd0}};

assign tmp_4_fu_417_p3 = {{add_ln75_fu_389_p2}, {1'd0}};

assign tmp_5_fu_451_p3 = {{select_ln75_1_fu_435_p3}, {1'd0}};

assign trunc_ln81_fu_549_p1 = select_ln77_fu_507_p3[1:0];

assign xor_ln75_fu_477_p2 = (icmp_ln77_fu_395_p2 ^ 1'd1);

assign zext_ln81_1_fu_373_p1 = L_co_reg_279;

assign zext_ln81_2_fu_425_p1 = tmp_4_fu_417_p3;

assign zext_ln81_3_fu_459_p1 = tmp_5_fu_451_p3;

assign zext_ln81_4_fu_515_p1 = add_ln77_fu_495_p2;

assign zext_ln81_5_fu_533_p1 = select_ln77_1_fu_525_p3;

assign zext_ln81_fu_363_p1 = tmp_2_fu_355_p3;

endmodule //conv_acc3t
