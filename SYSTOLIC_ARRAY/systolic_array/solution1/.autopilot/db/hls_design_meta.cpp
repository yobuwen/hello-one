#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_a_ddr_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_ddr_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_ddr_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_a_ddr_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_ddr_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_a_ddr_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_a_ddr_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_a_ddr_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_a_ddr_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_a_ddr_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_a_ddr_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_a_ddr_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_a_ddr_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_a_ddr_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_ddr_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_ddr_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_a_ddr_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_a_ddr_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_a_ddr_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_ddr_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_a_ddr_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_ddr_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_ddr_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_a_ddr_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_ddr_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_a_ddr_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_a_ddr_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_a_ddr_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_a_ddr_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_a_ddr_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_a_ddr_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_a_ddr_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_a_ddr_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_a_ddr_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_ddr_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_ddr_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_a_ddr_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_a_ddr_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_ddr_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_a_ddr_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_a_ddr_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_a_ddr_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_a_ddr_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_a_ddr_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_a_ddr_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_b_ddr_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_ddr_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_ddr_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_b_ddr_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_ddr_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_b_ddr_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_b_ddr_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_b_ddr_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_b_ddr_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_b_ddr_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_b_ddr_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_b_ddr_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_b_ddr_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_b_ddr_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_ddr_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_ddr_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_b_ddr_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_b_ddr_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_b_ddr_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_ddr_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_b_ddr_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_ddr_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_ddr_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_b_ddr_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_ddr_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_b_ddr_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_b_ddr_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_b_ddr_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_b_ddr_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_b_ddr_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_b_ddr_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_b_ddr_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_b_ddr_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_b_ddr_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_ddr_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_ddr_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_b_ddr_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_b_ddr_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_ddr_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_b_ddr_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_b_ddr_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_b_ddr_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_b_ddr_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_b_ddr_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_b_ddr_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_c_ddr_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_ddr_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_ddr_AWADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_c_ddr_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_ddr_AWLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_c_ddr_AWSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_c_ddr_AWBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_c_ddr_AWLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_c_ddr_AWCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_c_ddr_AWPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_c_ddr_AWQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_c_ddr_AWREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_c_ddr_AWUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_c_ddr_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_ddr_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_ddr_WDATA", 32, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_c_ddr_WSTRB", 4, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_c_ddr_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_c_ddr_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_ddr_WUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_c_ddr_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_ddr_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_ddr_ARADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_c_ddr_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_ddr_ARLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_c_ddr_ARSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_c_ddr_ARBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_c_ddr_ARLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_c_ddr_ARCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_c_ddr_ARPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_c_ddr_ARQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_c_ddr_ARREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_c_ddr_ARUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_c_ddr_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_ddr_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_ddr_RDATA", 32, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_c_ddr_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_c_ddr_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_ddr_RUSER", 1, hls_in, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_c_ddr_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_c_ddr_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_c_ddr_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_c_ddr_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_c_ddr_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_c_ddr_BUSER", 1, hls_in, 2, "m_axi", "USER", 1),
};
const char* HLS_Design_Meta::dut_name = "systolic_array";
